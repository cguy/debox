[config]
package.base=org.debox.photo
package.filters=filter
package.actions=service
package.errors=service
package.views=WEB-INF/

[debox.properties]
database.host=
database.port=
database.name=
database.username=
database.password=
database.idle.connection.test.period=300
database.prefered.test.query=SELECT 1
debox.working.directory=

[errors]
com.restfb.exception.FacebookOAuthException         ThirdPartyService.handleOAuthException
org.scribe.exceptions.OAuthException                ThirdPartyService.handleOAuthException

[filters]
# -----------------------------------------------------------------------------------------------
# CONFIGURATION CHECKER
# -----------------------------------------------------------------------------------------------
*           /*                                      ConfigurationFilter.doFilter

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION
# -----------------------------------------------------------------------------------------------
*           /*                                      HeaderFilter.setExpireHeader

GET,POST    /settings                               AdministrationFilter.checkUserAuthentication

GET,POST    /configuration                          AdministrationFilter.checkUserSession
GET,POST    /accounts/*                             AdministrationFilter.checkUserAuthentication
POST        /accounts/*/settings                    AdministrationFilter.checkUserAuthentication

GET         /accounts/*/tokens                      AdministrationFilter.checkUserAuthentication
PUT,POST    /accounts/*/token                       AdministrationFilter.checkUserAuthentication
*           /token/*                                AdministrationFilter.checkUserAuthentication

*           /administration/*                       AdministrationFilter.checkUserSession

DELETE      /photo/*                                AdministrationFilter.checkUserSession
GET,POST    /photo/*/comments                       AdministrationFilter.checkUserAuthentication

POST,DELETE /album                                  AdministrationFilter.checkUserSession
GET,POST    /album/*/regeneratethumbnails           AdministrationFilter.checkUserSession
POST        /album/*/comments                       AdministrationFilter.checkUserAuthentication

POST        /uploadThumbnails                       AdministrationFilter.checkUserSession
GET         /uploadProgress                         AdministrationFilter.checkUserSession

DELETE      /third-party-account/*                  AdministrationFilter.checkUserSession

DELETE      /comment/*                              AdministrationFilter.checkUserAuthentication

[actions]
# -----------------------------------------------------------------------------------------------
# INSTALL
# -----------------------------------------------------------------------------------------------
GET         /install                            view:install.html
POST        /datasource                         InstallationService.setDataSource
POST        /working-directory                  InstallationService.setWorkingDirectory
POST        /register-administrator             InstallationService.createUserAndRoles

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION
# -----------------------------------------------------------------------------------------------
GET         /configuration                      ConfigurationService.getConfiguration
POST        /configuration                      ConfigurationService.editConfiguration
POST        /configuration/thirdparty           ConfigurationService.editThirdPartyConfiguration     activated=false

GET         /administration/sync                AdministrationService.getSyncProgress
POST        /administration/sync                AdministrationService.synchronize                    forceCheckDates=false
DELETE      /administration/sync                AdministrationService.cancelSynchronization
POST        /administration/upload              AdministrationService.upload

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION - USER
# -----------------------------------------------------------------------------------------------
POST        /register                           AccountService.register
POST        /authenticate                       AccountService.authenticate
GET         /account                            AccountService.getLoggedUser
GET         /accounts/{userId}/settings         ConfigurationService.getUserSettings
POST        /accounts/{userId}/settings         ConfigurationService.setUserSettings
POST        /accounts/{userId}/credentials      AccountService.editCredentials
POST        /accounts/{userId}/delete           AccountService.deleteAccount
POST        /accounts/{userId}                  AccountService.editPersonalData
GET         /logout                             AccountService.logout
DELETE      /third-party-account/{id}           AccountService.deleteThirdPartyAccount

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION - PHOTOS
# -----------------------------------------------------------------------------------------------
POST        /photo/{id}                         PhotoService.editPhoto
DELETE      /photo/{id}                         PhotoService.deletePhoto

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION - ALBUMS
# -----------------------------------------------------------------------------------------------
PUT         /album                                  AlbumService.createAlbum
POST        /album/{albumId}                        AlbumService.editAlbum                           downloadable=false
DELETE      /album/{albumId}                        AlbumService.deleteAlbum
POST        /album/{albumId}/regeneratethumbnails   AlbumService.regenerateThumbnails
GET         /album/{albumId}/regeneratethumbnails   AlbumService.getRegenerationProgress
GET         /uploadProgress                         AdministrationService.getUploadProgress

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION - TOKENS
# -----------------------------------------------------------------------------------------------
GET         /accounts/{userId}/tokens           TokenService.getTokens
PUT         /token                              TokenService.createToken
GET         /token/{id}                         TokenService.getToken
POST        /token                              TokenService.editToken
POST        /token/{id}                         TokenService.editToken
POST        /token/reinit/{id}                  TokenService.reinitToken
DELETE      /token/{id}                         TokenService.deleteToken

# -----------------------------------------------------------------------------------------------
# MEDIA - COMMENTS
# -----------------------------------------------------------------------------------------------
POST   /album/{albumId}/comments                 CommentService.createAlbumComment
POST   /photo/{photoId}/comments                 CommentService.createPhotoComment
GET    /photo/{photoId}/comments                 CommentService.getPhotoComments
DELETE /comment/{commentId}                      CommentService.deleteComment

# -----------------------------------------------------------------------------------------------
# MEDIA - STREAMS
# -----------------------------------------------------------------------------------------------
GET   /album/{albumId:.+-cover\.jpg}            AlbumService.getAlbumCover
POST  /album/{albumId}/cover                    AlbumService.setAlbumCover
GET   /photo/{mediaId:.+\.jpg*}                 MediaService.getPictureStream     size=original
GET   /video/{mediaId:.+\.jpg*}                 MediaService.getPictureStream     size=original
GET   /video/{filename}                         VideoService.getVideoStream

# -----------------------------------------------------------------------------------------------
# MEDIA - DESCRIPTIONS
# -----------------------------------------------------------------------------------------------
GET         /albums                             AlbumService.getAlbums
GET         /album/{id}                         AlbumService.getAlbum

# -----------------------------------------------------------------------------------------------
# MEDIA - DOWNLOADS
# -----------------------------------------------------------------------------------------------
GET /download/album/{albumId}/min               AlbumService.download        resized=true
GET /download/album/{albumId}                   AlbumService.download        resized=false

# -----------------------------------------------------------------------------------------------
# FRONTEND TEMPLATES
# -----------------------------------------------------------------------------------------------
GET   /tpl                                      HomeService.renderTemplates

# -----------------------------------------------------------------------------------------------
# THIRD-PARTY CALLBACKS
# -----------------------------------------------------------------------------------------------
GET   /facebook                                 AccountService.handleFacebookCallback
GET   /google                                   AccountService.handleGoogleCallback

# -----------------------------------------------------------------------------------------------
# HOME
# -----------------------------------------------------------------------------------------------
GET   /{token}                                  view:index.html
GET   /                                         view:index.html
