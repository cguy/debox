[config]
package.base=org.debox.photo
package.filters=filter
package.actions=service
package.errors=service
package.views=WEB-INF/

# server.error.page=disabled

[debox.properties]
database.type=
database.jdbc.url=
database.username=
database.password=

[errors]
com.restfb.exception.FacebookOAuthException         ThirdPartyService.handleOAuthException
org.scribe.exceptions.OAuthException                ThirdPartyService.handleOAuthException

org.debox.photo.exception.ForbiddenAccessException      DeboxService.renderHttpError
org.debox.photo.exception.InternalErrorException        DeboxService.renderHttpError
org.debox.photo.exception.NotFoundException             DeboxService.renderHttpError
org.debox.photo.exception.ConflictException             DeboxService.renderHttpError
org.debox.photo.exception.BadRequestException           DeboxService.renderHttpError
org.debox.photo.exception.UnauthorizedException         DeboxService.renderHttpError

[filters]
# -----------------------------------------------------------------------------------------------
# CONFIGURATION CHECKER
# -----------------------------------------------------------------------------------------------
*           /*                                      ConfigurationFilter.doFilter

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION
# -----------------------------------------------------------------------------------------------
*           /*                                      HeaderFilter.setExpireHeader

GET,POST    /settings                               AdministrationFilter.checkUserAuthentication

GET,POST    /configuration                          AdministrationFilter.checkUserSession
GET,POST    /accounts/*                             AdministrationFilter.checkUserAuthentication
POST        /accounts/*/settings                    AdministrationFilter.checkUserAuthentication

GET         /accounts/*/tokens                      AdministrationFilter.checkUserAuthentication
PUT,POST    /accounts/*/token                       AdministrationFilter.checkUserAuthentication
*           /token/*                                AdministrationFilter.checkUserAuthentication

*           /administration/*                       AdministrationFilter.checkUserSession

POST,DELETE /photo/*                                AdministrationFilter.checkUserAuthentication
GET,POST    /photo/*/comments                       AdministrationFilter.checkUserAuthentication

POST,DELETE /video/*                                AdministrationFilter.checkUserAuthentication
GET,POST    /video/*/comments                       AdministrationFilter.checkUserAuthentication

POST,DELETE /album                                  AdministrationFilter.checkUserSession
GET,POST    /album/*/regeneratethumbnails           AdministrationFilter.checkUserSession
POST        /album/*/comments                       AdministrationFilter.checkUserAuthentication

*           /comments                               AdministrationFilter.checkUserAuthentication

POST        /uploadThumbnails                       AdministrationFilter.checkUserSession
GET         /uploadProgress                         AdministrationFilter.checkUserSession

DELETE      /third-party-account/*                  AdministrationFilter.checkUserSession

DELETE      /comment/*                              AdministrationFilter.checkUserAuthentication

[actions]
# -----------------------------------------------------------------------------------------------
# ADMINISTRATION
# -----------------------------------------------------------------------------------------------
GET         /configuration                      ConfigurationService.getConfiguration
POST        /configuration                      ConfigurationService.editConfiguration
POST        /configuration/thirdparty           ConfigurationService.editThirdPartyConfiguration     activated=false

GET         /administration/sync                AdministrationService.getSyncProgress
POST        /administration/sync                AdministrationService.synchronize                    forceCheckDates=false
DELETE      /administration/sync                AdministrationService.cancelSynchronization
POST        /administration/upload              AdministrationService.upload

GET         /administration/settings            AdministrationService.renderSettingsPage
GET         /administration                     redirect:/administration/settings

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION - USER
# -----------------------------------------------------------------------------------------------
GET         /register                           AccountService.renderRegisterPage
POST        /register                           AccountService.register
GET         /login                              AccountService.renderSignInPage
POST        /login                              AccountService.authenticate

GET         /account/settings                   AccountService.renderAccountSettingsPage
GET         /account/about-me                   AccountService.renderCurrentAccountPage
GET         /account/synchronization            AccountService.renderMediaSynchronizationPage
GET         /account/tokens                     AccountService.renderTokensManagementPage
GET         /account/comments                   AccountService.renderCommentsManagementPage
GET         /account/albums                     AccountService.renderAlbumsOverviewPage
GET         /account/upload                     AccountService.renderPhotosUploadPage
GET         /account                            redirect:/account/albums

GET         /accounts/{userId}/settings         ConfigurationService.getUserSettings
POST        /accounts/{userId}/settings         ConfigurationService.setUserSettings
POST        /accounts/{userId}/credentials      AccountService.editCredentials
POST        /accounts/{userId}/delete           AccountService.deleteAccount
POST        /accounts/{userId}                  AccountService.editPersonalData
GET         /logout                             AccountService.logout
DELETE      /third-party-account/{id}           AccountService.deleteThirdPartyAccount

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION - PHOTOS
# -----------------------------------------------------------------------------------------------
POST        /photo/{id}                         MediaService.editMedia
DELETE      /photo/{id}                         PhotoService.delete

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION - VIDEOS
# -----------------------------------------------------------------------------------------------
POST        /video/{id}                         MediaService.editMedia
DELETE      /video/{id}                         VideoService.delete

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION - ALBUMS
# -----------------------------------------------------------------------------------------------
GET         /albums/{albumId}/edition/medias        AlbumService.getAlbumMediasPage
GET         /albums/{albumId}/edition/cover         AlbumService.getAlbumCoverPage
GET         /albums/{albumId}/edition/permissions   AlbumService.getAlbumVisitorAccessesPage
GET         /albums/{albumId}/edition               AlbumService.getAlbumEditionPage

DELETE      /albums/{albumId}                       AlbumService.deleteAlbum
POST        /albums/{albumId}                       AlbumService.editAlbum

PUT         /albums                                 AlbumService.createAlbum

POST        /albums/{albumId}/regeneratethumbnails  AlbumService.regenerateThumbnails
GET         /albums/{albumId}/regeneratethumbnails  AlbumService.getRegenerationProgress
GET         /uploadProgress                         AdministrationService.getUploadProgress

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION - TOKENS
# -----------------------------------------------------------------------------------------------
GET         /accounts/{userId}/tokens           TokenService.getTokens
PUT         /token                              TokenService.createToken
GET         /token/{id}                         TokenService.getToken
POST        /token                              TokenService.editToken
POST        /token/{id}                         TokenService.editToken
POST        /token/reinit/{id}                  TokenService.reinitToken
DELETE      /token/{id}                         TokenService.deleteToken

# -----------------------------------------------------------------------------------------------
# MEDIA - COMMENTS
# -----------------------------------------------------------------------------------------------
GET    /comments                                 CommentService.getAll

POST   /album/{albumId}/comments                 CommentService.createAlbumComment

POST   /photo/{mediaId}/comments                 CommentService.createMediaComment
GET    /photo/{mediaId}/comments                 CommentService.getMediaComments

POST   /video/{mediaId}/comments                 CommentService.createMediaComment
GET    /video/{mediaId}/comments                 CommentService.getMediaComments

DELETE /comments/{commentId}                     CommentService.deleteComment

# -----------------------------------------------------------------------------------------------
# MEDIA - STREAMS
# -----------------------------------------------------------------------------------------------
GET   /album/{albumId:.+-cover\.jpg}            AlbumService.getAlbumCover
POST  /album/{albumId}/cover                    AlbumService.setAlbumCover
GET   /photo/{mediaId:.+\.jpg*}                 MediaService.getPictureStream     size=original
GET   /video/{mediaId:.+\.jpg*}                 MediaService.getPictureStream     size=original
GET   /video/{filename}                         VideoService.getVideoStream

# -----------------------------------------------------------------------------------------------
# MEDIA - DESCRIPTIONS
# -----------------------------------------------------------------------------------------------
GET         /albums                             AlbumService.renderAlbums
GET         /album/{id}                         AlbumService.getAlbum

# -----------------------------------------------------------------------------------------------
# MEDIA - DOWNLOADS
# -----------------------------------------------------------------------------------------------
GET /download/album/{albumId}/min               AlbumService.download        resized=true
GET /download/album/{albumId}                   AlbumService.download        resized=false

# -----------------------------------------------------------------------------------------------
# FRONTEND TEMPLATES
# -----------------------------------------------------------------------------------------------
GET   /tpl                                      HomeService.renderTemplates

# -----------------------------------------------------------------------------------------------
# THIRD-PARTY CALLBACKS
# -----------------------------------------------------------------------------------------------
GET   /facebook                                 AccountService.handleFacebookCallback
# GET   /google                                   AccountService.handleGoogleCallback

# -----------------------------------------------------------------------------------------------
# STATIC PAGES
# -----------------------------------------------------------------------------------------------
GET   /about                                    DeboxService.renderTemplatedPage    templateName=about

# -----------------------------------------------------------------------------------------------
# HOME
# -----------------------------------------------------------------------------------------------
GET   /{token}                                  AlbumService.renderAlbums
GET   /                                         AlbumService.renderAlbums

[extensions]
/    install.wm