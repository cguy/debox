[config]
package.base=org.debox.photo
package.filters=filter
package.actions=service
package.errors=service
package.views=WEB-INF/

server.error.page=disabled

[debox.properties]
database.type=
database.jdbc.url=
database.username=
database.password=

[errors]
com.restfb.exception.FacebookOAuthException         ThirdPartyService.handleOAuthException
org.scribe.exceptions.OAuthException                ThirdPartyService.handleOAuthException

# -----------------------------------------------------------------------------------------------
# COMMON
[filters]
*           /*                                      HeaderFilter.setExpireHeader
*           /*                                      ConfigurationFilter.doFilter

# -----------------------------------------------------------------------------------------------
# ALBUMS
[filters]
GET,POST    /albums/*/regeneratethumbnails          PermissionFilter.checkAlbumPermission   permission=write

[actions]
PUT         /albums                                 AlbumService.createAlbum
GET         /albums                                 AlbumService.getAlbums

GET         /albums/{albumId:.+-min\.zip}           AlbumService.download        resized=true
GET         /albums/{albumId:.+\.zip}               AlbumService.download        resized=false

GET         /albums/{albumId:.+-cover\.jpg}         AlbumService.getAlbumCover
POST        /albums/{albumId}/cover                 AlbumService.setAlbumCover

GET         /albums/{albumId}                       AlbumService.getAlbum
POST        /albums/{albumId}                       AlbumService.editAlbum
DELETE      /albums/{albumId}                       AlbumService.deleteAlbum

POST        /albums/{albumId}/comments              CommentService.createAlbumComment

POST        /albums/{albumId}/regeneratethumbnails  AlbumService.regenerateThumbnails
GET         /albums/{albumId}/regeneratethumbnails  AlbumService.getRegenerationProgress

GET         /uploadProgress                         AdministrationService.getUploadProgress

# -----------------------------------------------------------------------------------------------
# ADMINISTRATION
[filters]
GET,POST    /configuration                      AdministrationFilter.isAdministrator
*           /administration/*                   AdministrationFilter.isAdministrator
POST        /uploadThumbnails                   AdministrationFilter.isAuthenticatedUser
GET         /uploadProgress                     AdministrationFilter.isAuthenticatedUser

[actions]
GET         /configuration                      ConfigurationService.getConfiguration
POST        /configuration                      ConfigurationService.editConfiguration
POST        /configuration/thirdparty           ConfigurationService.editThirdPartyConfiguration     activated=false

GET         /administration/sync                AdministrationService.getSyncProgress
POST        /administration/sync                AdministrationService.synchronize                    forceCheckDates=false
DELETE      /administration/sync                AdministrationService.cancelSynchronization
POST        /administration/upload              AdministrationService.upload

# -----------------------------------------------------------------------------------------------
# USER
[filters]
DELETE      /third-party-account/*              AdministrationFilter.isAuthenticatedUser
GET,POST    /accounts/*                         AdministrationFilter.isAuthenticatedUser
POST        /accounts/*/settings                AdministrationFilter.isAuthenticatedUser

GET         /accounts/*/tokens                  AdministrationFilter.isAuthenticatedUser
PUT,POST    /accounts/*/token                   AdministrationFilter.isAuthenticatedUser

[actions]
POST        /register                           AccountService.register
POST        /authenticate                       AccountService.authenticate
GET         /account                            AccountService.getLoggedUser
GET         /accounts/{userId}/settings         ConfigurationService.getUserSettings
POST        /accounts/{userId}/settings         ConfigurationService.setUserSettings
POST        /accounts/{userId}/credentials      AccountService.editCredentials
POST        /accounts/{userId}/delete           AccountService.deleteAccount
POST        /accounts/{userId}                  AccountService.editPersonalData
GET         /logout                             AccountService.logout
DELETE      /third-party-account/{accountId}    AccountService.deleteThirdPartyAccount

# -----------------------------------------------------------------------------------------------
# PHOTOS
[actions]
POST        /photos/{mediaId}                    MediaService.editMedia
DELETE      /photos/{photoId}                    PhotoService.delete
GET         /photos/{mediaId:.+\.jpg*}           MediaService.getPictureStream     size=original

# -----------------------------------------------------------------------------------------------
# VIDEOS
[actions]
POST        /videos/{mediaId}                    MediaService.editMedia
DELETE      /videos/{videoId}                    VideoService.delete
GET         /videos/{mediaId:.+\.jpg*}           MediaService.getPictureStream     size=original
GET         /videos/{filename}                   VideoService.getVideoStream

# -----------------------------------------------------------------------------------------------
# TOKENS
[filters]
*           /token/*                            AdministrationFilter.isAuthenticatedUser

[actions]
GET         /accounts/{userId}/tokens           TokenService.getTokens
PUT         /token                              TokenService.createToken
GET         /token/{id}                         TokenService.getToken
POST        /token                              TokenService.editToken
POST        /token/{id}                         TokenService.editToken
POST        /token/reinit/{id}                  TokenService.reinitToken
DELETE      /token/{id}                         TokenService.deleteToken

# -----------------------------------------------------------------------------------------------
# MEDIA - COMMENTS
[filters]
*           /comments                           AdministrationFilter.isAuthenticatedUser
DELETE      /comment/*                          AdministrationFilter.isAuthenticatedUser

[actions]
GET    /comments                                CommentService.getAll

POST   /photos/{mediaId}/comments               CommentService.createMediaComment
GET    /photos/{mediaId}/comments               CommentService.getMediaComments

POST   /videos/{mediaId}/comments               CommentService.createMediaComment
GET    /videos/{mediaId}/comments               CommentService.getMediaComments

DELETE /comments/{commentId}                    CommentService.deleteComment

# -----------------------------------------------------------------------------------------------
# FRONTEND TEMPLATES
GET   /tpl                                      HomeService.renderTemplates

# -----------------------------------------------------------------------------------------------
# THIRD-PARTY CALLBACKS
GET   /facebook                                 AccountService.handleFacebookCallback

# -----------------------------------------------------------------------------------------------
# HOME
GET   /{token}                                  view:index.html
GET   /                                         view:index.html

# -----------------------------------------------------------------------------------------------
# WEBMOTION EXTENSIONS
# -----------------------------------------------------------------------------------------------
[extensions]
/    install.wm
